########################################################################################################################
#
########################################################################################################################
from requests.models        import Response
from network.communicator   import Communicator


########################################################################################################################
#
########################################################################################################################
class API:

    ####################################################################################################################
    #
    ####################################################################################################################
    @staticmethod
    def __apply_params(url:str, params:dict[str,str]) -> str:
        if len(params.keys()) == 0:
            return url

        if not url.endswith('?'):
            url += '?'

        return url + ('&'.join([f'{k}={v}' for k,v in params.items()]))

    ####################################################################################################################
    #
    ####################################################################################################################
    def __init__(self, url_base:str, communicator:Communicator, format='/api/json'):
        self.communicator:Communicator = communicator
        self.url_base = url_base
        self.format:str = format

    ####################################################################################################################
    #
    ####################################################################################################################
    def get(self, url:str, params:dict[str,str]={}) -> Response:
        url = self.__apply_params(url=(self.url_base + url), params=params)
        return self.communicator.get(url)

    ####################################################################################################################
    #
    ####################################################################################################################
    def post(self, url:str, params:dict[str,str]={}) -> Response:
        url = self.__apply_params(url=(self.url_base + url), params=params)
        return self.communicator.post(url)
